name: Prerelease pipeline

on:
  release:
    types:
      - prereleased
    tags:
      - 'v*'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO_VERSION: '1.9.7'
  GPG_MAIL: 'infrastructure-eng@newrelic.com'
  GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
  GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
  INTEGRATION: "redis"
  ORIGINAL_REPO_NAME: 'newrelic/nri-redis'
  PFX_CERTIFICATE_BASE64: ${{ secrets.OHAI_PFX_CERTIFICATE_BASE64 }} # base64 encoded
  PFX_CERTIFICATE_DESCRIPTION: 'New Relic'
  PFX_PASSPHRASE:  ${{ secrets.OHAI_PFX_PASSPHRASE }}
  REPO_FULL_NAME: ${{ github.event.repository.full_name }}
  SLACK_TOKEN: ${{ secrets.COREINT_SLACK_TOKEN }}
  SLACK_CHANNEL: ${{ secrets.COREINT_SLACK_CHANNEL }}
  SNYK_TOKEN: ${{ secrets.COREINT_SNYK_TOKEN }}
  TAG: ${{ github.event.release.tag_name }}
  DOCKER_HUB_ID: ${{ secrets.OHAI_DOCKER_HUB_ID }}
  DOCKER_HUB_PASSWORD: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}

jobs:
  prerelease:
    name: Build binary for *Nix/Win, create archives for *Nix/Win, create packages for *Nix, upload all artifacts into GH Release assets
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_ID }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}
      - name: Pre release
        run: |
          make get-integrations
          make get-fluentbit-linux
          make ci/prerelease